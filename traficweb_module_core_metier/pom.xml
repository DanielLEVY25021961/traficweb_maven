<project xmlns="http://maven.apache.org/POM/4.0.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- ========================================================== -->
	<!-- GAV (identifiant du projet PERE = PARENT) 	                -->
	<!-- G : groupId : nom de domaine                               -->
	<!-- A : artifactId : nom du projet                             -->
	<!-- V : version : version du projet                            -->
	<!-- ========================================================== -->
	<!-- Projet parent dont le présent POM est un module -->
	<parent>
		<!-- domaine (espace de nom) appelé GROUPE (G) dans Maven -->
		<groupId>levy.daniel.application</groupId>
		<!-- Nom du projet appelé artifactId (A) dans Maven -->
		<artifactId>traficweb_maven</artifactId>
		<!-- Version Bêta de développement (SNAPSHOT) -->
		<!--non incrémentée dans Maven -->
		<version>0.0.1-SNAPSHOT</version>
	</parent>


	<!-- ========================================================== -->
	<!-- 					IDENTIFIANT DU MODULE                   -->
	<!-- Artefact = Nom du projet MODULE                            -->
	<!-- ========================================================== -->
	<artifactId>traficweb_module_core_metier</artifactId>
	<!-- name est utilisé par Eclipse pour générer le projet module -->
	<name>traficweb_module_core_metier</name>
	<description>Le métier de l'application</description>


	<!-- ========================================================== -->
	<!--                       PACKAGING                            -->
	<!-- Préciser ici la forme du livrable                          -->
	<!-- que le présent module Maven doit produire (war, jar,       -->
	<!--	POM, ...).                                              -->
	<!-- ========================================================== -->
	<!-- Résultat du Packaging (forme du livrable). Ici jar         -->
	<packaging>jar</packaging>

	<!-- ========================================================== -->
	<!-- NOM DU LIVRABLE GENERE PAR MAVEN                           -->
	<!-- Préciser le nom du livrable que Maven doit produire        -->
	<!-- (monapplication.war,                                       -->
	<!-- monapplication.jar, monapplication.POM, ...).              -->
	<!-- ========================================================== -->
	<!-- Nom de l'application générée par le projet Maven -->	    
	<!-- DEFINI DANS LE mODULE PARENT -->
    <!-- Description de l'application générée par le projet Maven -->
	<!-- DEFINI DANS LE mODULE PARENT -->
	<!-- URL éventuelle permettant de se connecter à l'application -->
    <!-- DEFINI DANS LE mODULE PARENT -->


    <!-- ================================================ -->
	<!--                    PROPERTIEs                    -->
	<!-- Préciser ici les propriétés générales du projet. -->
	<!-- ================================================ -->
	<properties>
		<!-- Force l'encoding des sources du projet en UTF-8 -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- Vérifie la conformité des classes Java (.java) avec le JDK 1.8 -->
		<maven.compiler.source>1.8</maven.compiler.source>
		<!-- Vérifie la conformité des classes Java (.class) avec le JDK 1.8 -->
		<maven.compiler.target>1.8</maven.compiler.target>
		<!-- Encodage pourle Reporting (site web) -->
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties>


	<!-- =============================================== -->
	<!--                DEPENDANCEs                      -->
	<!-- Gestion des dépendances utilisées par le module -->
	<!-- NE RAJOUTER QUE lES DEPENDANCES NON DECLAREES   -->
	<!-- DANS LE POM PARENT.							 -->
	<!-- =============================================== -->  
	<dependencies>

	</dependencies>


				<!-- ======================================  -->
				<!--   REPOSITORIES	POUR LES DEPENDANCES  	 -->
				<!-- ======================================  -->	
			<!-- Précise la localisation des dépôts Maven -->
	<repositories>
	
		<!-- Dépôt Central MAVEN pour les dépendances -->
		<repository>
			<id>central</id>
			<name>Central Repository</name>
			<url>https://repo.maven.apache.org/maven2</url>
			<!-- Ici les RELEASES, pas les milestones ou les snapshots. -->
			<snapshots>
				<enabled>false</enabled>
			</snapshots>			
		</repository>
		
		<!-- http://www.baeldung.com/spring-maven-repository -->
		<!-- dépôt Maven pour SPRING au cas où le dépôt central est indisponible. -->
		<repository> 
        <id>repository.spring.release</id> 
        	<name>Spring GA Repository</name> 
        	<url>http://repo.spring.io/release</url>
        	<!-- Ici les RELEASES, pas les milestones ou les snapshots. -->
        	<snapshots>
				<enabled>false</enabled>
			</snapshots>			         
    	</repository>
    	
    	<!-- dépôt Maven pour SPRING au cas où le dépôt central est indisponible. -->
    	<repository>
	        <id>io.spring.repo.maven.release</id>
	        <url>http://repo.spring.io/release/</url>
	        <!-- Ici les RELEASES, pas les milestones ou les snapshots. -->
	        <snapshots>
	        	<enabled>false</enabled>
	        </snapshots>
	    </repository>
    	    	
	</repositories>
	
  
  				<!-- ================================== -->
				<!--       PLUGIN REPOSITORIES			-->
				<!-- ================================== -->	
  			
	  <pluginRepositories>
	    <pluginRepository>
	      <releases>
	        <updatePolicy>never</updatePolicy>
	      </releases>
	      <snapshots>
	        <enabled>false</enabled>
	      </snapshots>
	      <id>central</id>
	      <name>Central Repository</name>
	      <url>https://repo.maven.apache.org/maven2</url>
	    </pluginRepository>
	  </pluginRepositories>



	<!-- ================================== -->
	<!--               BUILD                -->
	<!-- ================================== -->
	<!-- Définition de la Structure du projet Maven -->
	<!-- ATTENTION : bien mettre des slash '/' et pas des antislashes '\' pour 
		garantir la compatibilité avec LINUX -->

	<build>

		<!-- ====================== -->
		<!-- CHEMINS ET REPERTOIRES -->
		<!-- ====================== -->

		<!-- CREER A LA MAIN SI MANQUANT -->
		
		<!-- REPERTOIRE DES BUILDS (target)-->
		<directory>${project.basedir}/target</directory>
		<!-- Répetoire des classes compilées -->
		<outputDirectory>${project.build.directory}/classes</outputDirectory>

		<!-- REPERTOIRE DES SOURCES (target)-->
		<!-- Répertoire des src Java. -->
		<sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
		<!-- Répertoire des scripts (scripts SQL ou Batch) -->
		<scriptSourceDirectory>${project.basedir}/src/main/scripts</scriptSourceDirectory>
		<!-- Répertoire des Tests src Java. -->
		<testSourceDirectory>${project.basedir}/src/test/java</testSourceDirectory>
		
		<!-- Répetoire des classes compilées de test -->
		<testOutputDirectory>${project.build.directory}/test-classes</testOutputDirectory>
		<resources>
			<resource>
				<directory>${project.basedir}/src/main/resources</directory>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>${project.basedir}/src/test/resources</directory>
			</testResource>
		</testResources>

		
		<!-- ============================================== -->
		<!-- NOM DU LIVRABLE CREE PAR MAVEN (jar, war, ...) -->
		<!-- ============================================== -->
		<finalName>${project.artifactId}-${project.version}</finalName>



				<!-- ================================== -->
				<!-- Management des plugins du module	-->
				<!-- PAS de balise <pluginManagement>   -->
				<!-- ================================== -->

		<plugins>

			<!-- Scripts particuliers ANT -->
			<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-antrun-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
			</plugin>

			<!-- Utilisé en fin de build des war, jar, ... -->
			<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-assembly-plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<configuration>
						<finalName>${project.artifactId}-${project.version}</finalName>
						<descriptors>
							<descriptor>src/assembly/assembly.xml</descriptor>		
						</descriptors>					
<!-- 						<descriptorRefs> -->
<!-- 							<descriptorRef>jar-with-dependencies</descriptorRef> -->
<!-- 						</descriptorRefs> -->
					<archive>
						<index>true</index>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<mainClass>levy.daniel.application.Helloworld</mainClass>
						</manifest>
					</archive>
				</configuration>
				<executions>
					<execution>
						<id>construit-jar-executable</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- IMPORTANT - Gère les dépendances -->
			<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-dependency-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
			</plugin>

			<!-- Gestion des versions de livrables (artefacts) -->
			<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-release-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
			</plugin>

			<!-- PHASE CLEAN (supression de target) -->
			<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-clean-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<executions>
					<execution>
						<id>default-clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Gestion des ressources. Copie des ressources au bon endroit lors 
				des builds. -->
			<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-resources-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>default-testResources</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>testResources</goal>
						</goals>
					</execution>
					<execution>
						<id>default-resources</id>
						<phase>process-resources</phase>
						<goals>
							<goal>resources</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Build des War -->
			<!-- ATTENTION en fonction de la balise packaging - METTRE PLUGIN JAR 
				SI APPLI DESKTOP -->
			<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-war-plugin -->
<!-- 			<plugin> -->
<!-- 				<groupId>org.apache.maven.plugins</groupId> -->
<!-- 				<artifactId>maven-war-plugin</artifactId> -->
<!-- 				<executions> -->
<!-- 					<execution> -->
<!-- 						<id>default-war</id> -->
<!-- 						<phase>package</phase> -->
<!-- 						<goals> -->
<!-- 							<goal>war</goal> -->
<!-- 						</goals> -->
<!-- 					</execution> -->
<!-- 				</executions> -->
<!-- 				<configuration> -->
<!-- 					ATTENTION : CHEMIN DES RESSOURCES WEB DE L'APPLICATION -->
<!-- 					<warSourceDirectory>${project.basedir}/src/main/webapp</warSourceDirectory> -->
<!-- 					<failOnMissingWebXml>false</failOnMissingWebXml> -->
<!-- 				</configuration> -->
<!-- 			</plugin> -->

			<!-- Build des Jar -->
			<!-- ATTENTION en fonction de la balise packaging - METTRE PLUGIN WAR 
				SI APPLI WEB -->
			<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-jar-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
					</archive>
				</configuration>
				<executions>
					<execution>
						<id>default-jar</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Compilation des sources en classes. -->
			<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-compiler-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<executions>
					<execution>
						<id>default-compile</id>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
						<!-- Garantit l'utilisation dans Eclipse de la version majeure du 
							JDK 1.8 par défaut (jdk1.8.144 dans mon Eclipse le 01/09/2017) -->
						<configuration>
							<source>1.8</source>
							<target>1.8</target>
						</configuration>
					</execution>
					<execution>
						<id>default-testCompile</id>
						<phase>test-compile</phase>
						<goals>
							<goal>testCompile</goal>
						</goals>
						<!-- Garantit l'utilisation dans Eclipse de la version majeure du 
							JDK 1.8 par défaut (jdk1.8.144 dans mon Eclipse le 01/09/2017) -->
						<configuration>
							<source>1.8</source>
							<target>1.8</target>
						</configuration>
					</execution>
				</executions>
				<!-- Garantit l'utilisation dans Eclipse de la version majeure du JDK 
					1.8 par défaut (jdk1.8.144 dans mon Eclipse le 01/09/2017) -->
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<!-- Tests unitaires -->
			<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-surefire-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<executions>
					<execution>
						<id>default-test</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Installation locale (recopie des artefacts buildés dans le repository 
				local) -->
			<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-install-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
   				<artifactId>maven-install-plugin</artifactId>
				<executions>
					<execution>
						<id>default-install</id>
						<phase>install</phase>
						<goals>
							<goal>install</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Déploiement sur le serveur applicatif. -->
			<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-deploy-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
			</plugin>

			<!-- Génération par Maven de son site Web. -->
			<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-site-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<executions>
					<execution>
						<id>default-site</id>
						<phase>site</phase>
						<goals>
							<goal>site</goal>
						</goals>
					</execution>
					<execution>
						<id>default-deploy</id>
						<phase>site-deploy</phase>
						<goals>
							<goal>deploy</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>

	</build>


	<!-- ========= -->
	<!-- REPORTING -->
	<!-- ========= -->	
	<reporting>
		<outputDirectory>${project.build.directory}/site</outputDirectory>
		<plugins>
			<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-project-info-reports-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>${maven-project-info-reports-plugin.version}</version>
				<configuration>
					<dependencyDetailsEnabled>false</dependencyDetailsEnabled>
					<dependencyLocationsEnabled>false</dependencyLocationsEnabled>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>dependencies</report>
							<report>scm</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-javadoc-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven-javadoc-plugin.version}</version>
				<configuration>
				<!-- Permet d'éviter les erreurs de création de Javadoc avec les <br/> -->
	                <additionalparam>-Xdoclint:none</additionalparam>
	            </configuration>
			</plugin>
		</plugins>
	</reporting>


</project>